{"ast":null,"code":"var _s = $RefreshSig$();\n// src/store/userStore.js\nimport { useEffect, useState } from 'react';\nimport { jwtDecode } from \"jwt-decode\";\nlet currentUser = null;\nlet setUserCallback = () => {};\nexport const setUser = user => {\n  currentUser = user;\n  setUserCallback(user);\n};\nexport const useUser = () => {\n  _s();\n  const [user, setUserState] = useState(currentUser);\n  useEffect(() => {\n    const token = localStorage.getItem(\"accessToken\");\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        const userObj = {\n          id: decoded.id,\n          displayName: decoded.username,\n          email: decoded.email,\n          role: decoded.role,\n          slug: decoded.slug\n        };\n        currentUser = userObj;\n        setUserState(userObj);\n      } catch (error) {\n        console.error(\"Invalid token\", error);\n        currentUser = null;\n        setUserState(null);\n      }\n    } else {\n      currentUser = null;\n      setUserState(null);\n    }\n    setUserCallback = setUserState;\n    return () => {\n      setUserCallback = () => {};\n    };\n  }, []);\n  return user;\n};\n_s(useUser, \"VGsopvTTow6gibCHpDTS4Bbrw1s=\");","map":{"version":3,"names":["useEffect","useState","jwtDecode","currentUser","setUserCallback","setUser","user","useUser","_s","setUserState","token","localStorage","getItem","decoded","userObj","id","displayName","username","email","role","slug","error","console"],"sources":["D:/HocLapTrinh/ProjectBenXe/MiniMarketClient/src/store/userStore.js"],"sourcesContent":["// src/store/userStore.js\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport {jwtDecode} from \"jwt-decode\";\r\n\r\nlet currentUser = null;\r\nlet setUserCallback = () => {};\r\n\r\nexport const setUser = (user) => {\r\n  currentUser = user;\r\n  setUserCallback(user);\r\n};\r\n\r\nexport const useUser = () => {\r\n  const [user, setUserState] = useState(currentUser);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        const userObj = {\r\n          id: decoded.id,\r\n          displayName: decoded.username,\r\n          email: decoded.email,\r\n          role: decoded.role,\r\n          slug: decoded.slug,\r\n        };\r\n        currentUser = userObj;\r\n        setUserState(userObj);\r\n      } catch (error) {\r\n        console.error(\"Invalid token\", error);\r\n        currentUser = null;\r\n        setUserState(null);\r\n      }\r\n    } else {\r\n      currentUser = null;\r\n      setUserState(null);\r\n    }\r\n\r\n    setUserCallback = setUserState;\r\n\r\n    return () => {\r\n      setUserCallback = () => {};\r\n    };\r\n  }, []);\r\n\r\n  return user;\r\n};\r\n"],"mappings":";AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAAQC,SAAS,QAAO,YAAY;AAEpC,IAAIC,WAAW,GAAG,IAAI;AACtB,IAAIC,eAAe,GAAGA,CAAA,KAAM,CAAC,CAAC;AAE9B,OAAO,MAAMC,OAAO,GAAIC,IAAI,IAAK;EAC/BH,WAAW,GAAGG,IAAI;EAClBF,eAAe,CAACE,IAAI,CAAC;AACvB,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACF,IAAI,EAAEG,YAAY,CAAC,GAAGR,QAAQ,CAACE,WAAW,CAAC;EAElDH,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjD,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,OAAO,GAAGX,SAAS,CAACQ,KAAK,CAAC;QAChC,MAAMI,OAAO,GAAG;UACdC,EAAE,EAAEF,OAAO,CAACE,EAAE;UACdC,WAAW,EAAEH,OAAO,CAACI,QAAQ;UAC7BC,KAAK,EAAEL,OAAO,CAACK,KAAK;UACpBC,IAAI,EAAEN,OAAO,CAACM,IAAI;UAClBC,IAAI,EAAEP,OAAO,CAACO;QAChB,CAAC;QACDjB,WAAW,GAAGW,OAAO;QACrBL,YAAY,CAACK,OAAO,CAAC;MACvB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrClB,WAAW,GAAG,IAAI;QAClBM,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,MAAM;MACLN,WAAW,GAAG,IAAI;MAClBM,YAAY,CAAC,IAAI,CAAC;IACpB;IAEAL,eAAe,GAAGK,YAAY;IAE9B,OAAO,MAAM;MACXL,eAAe,GAAGA,CAAA,KAAM,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOE,IAAI;AACb,CAAC;AAACE,EAAA,CAnCWD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\HocLapTrinh\\\\ProjectBenXe\\\\MiniMarketClient\\\\src\\\\contexts\\\\OrderProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderContext = /*#__PURE__*/createContext();\nconst OrderProvider = ({\n  children\n}) => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [userId, setUserId] = useState(\"\");\n  useEffect(() => {\n    const token = localStorage.getItem(\"accessToken\");\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        setUserId(decoded.id);\n      } catch (err) {\n        console.error(\"Invalid token:\", err);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (userId) {\n      fetchCart();\n    }\n  }, [userId]);\n\n  // Fetch cart on mount\n\n  const fetchCart = async () => {\n    const token = localStorage.getItem(\"accessToken\");\n    try {\n      const res = await axios.get(`http://localhost:4000/cart/${userId}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      res.data.items.userId = res.data.user;\n      setOrders(res.data.items || []);\n    } catch (err) {\n      console.error(\"Fetch cart failed:\", err);\n    }\n  };\n  // useEffect(() => {\n  //       fetchCart();\n  //   }, []);\n\n  // Add to cart\n  const handleCart = async product => {\n    try {\n      const token = localStorage.getItem(\"accessToken\"); // hoặc sessionStorage nếu bạn lưu ở đó\n\n      await axios.post(\"http://localhost:4000/cart/add\", {\n        userId,\n        productId: product._id,\n        quantity: 1\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchCart(); // Refresh cart\n    } catch (err) {\n      console.error(\"Add to cart failed:\", err);\n    }\n  };\n  const updateQuantity = async (productId, quantity) => {\n    const token = localStorage.getItem(\"accessToken\"); // hoặc sessionStorage nếu bạn lưu ở đó\n\n    try {\n      await axios.put(`http://localhost:4000/cart/update`, {\n        userId,\n        productId,\n        quantity\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchCart(); // Refresh lại giỏ hàng\n    } catch (err) {\n      console.error(\"Update quantity failed:\", err);\n    }\n  };\n\n  // Remove one product\n  const removeProduct = async productId => {\n    const token = localStorage.getItem(\"accessToken\");\n    try {\n      await axios.delete(\"http://localhost:4000/cart/remove\", {\n        data: {\n          userId,\n          productId\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchCart(); // Refresh cart\n    } catch (err) {\n      console.error(\"Remove product failed:\", err);\n    }\n  };\n\n  // Clear entire cart\n  const clearCart = async () => {\n    try {\n      const promises = orders.map(item => removeProduct(item.product._id));\n      await Promise.all(promises);\n      setOrders([]);\n    } catch (err) {\n      console.error(\"Clear cart failed:\", err);\n    }\n  };\n  const value = {\n    orders,\n    fetchCart,\n    // thêm nếu bạn muốn gọi lại từ bên ngoài\n    handleCart,\n    removeProduct,\n    clearCart,\n    updateQuantity\n  };\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderProvider, \"bcPiS5ZIhZ9cVt1KqYRRNegf+aI=\");\n_c = OrderProvider;\nexport default OrderProvider;\nvar _c;\n$RefreshReg$(_c, \"OrderProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","jwtDecode","jsxDEV","_jsxDEV","OrderContext","OrderProvider","children","_s","orders","setOrders","userId","setUserId","token","localStorage","getItem","decoded","id","err","console","error","fetchCart","res","get","headers","Authorization","data","items","user","handleCart","product","post","productId","_id","quantity","updateQuantity","put","removeProduct","delete","clearCart","promises","map","item","Promise","all","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/HocLapTrinh/ProjectBenXe/MiniMarketClient/src/contexts/OrderProvider.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nexport const OrderContext = createContext();\r\n\r\nconst OrderProvider = ({ children }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        setUserId(decoded.id);\r\n      } catch (err) {\r\n        console.error(\"Invalid token:\", err);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      fetchCart();\r\n    }\r\n  }, [userId]);\r\n\r\n  // Fetch cart on mount\r\n\r\n  const fetchCart = async () => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n\r\n    try {\r\n      const res = await axios.get(`http://localhost:4000/cart/${userId}`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      res.data.items.userId = res.data.user;\r\n      setOrders(res.data.items || []);\r\n    } catch (err) {\r\n      console.error(\"Fetch cart failed:\", err);\r\n    }\r\n  };\r\n  // useEffect(() => {\r\n  //       fetchCart();\r\n  //   }, []);\r\n\r\n  // Add to cart\r\n  const handleCart = async (product) => {\r\n    try {\r\n      const token = localStorage.getItem(\"accessToken\"); // hoặc sessionStorage nếu bạn lưu ở đó\r\n\r\n      await axios.post(\r\n        \"http://localhost:4000/cart/add\",\r\n        {\r\n          userId,\r\n          productId: product._id,\r\n          quantity: 1,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      fetchCart(); // Refresh cart\r\n    } catch (err) {\r\n      console.error(\"Add to cart failed:\", err);\r\n    }\r\n  };\r\n\r\n  const updateQuantity = async (productId, quantity) => {\r\n    const token = localStorage.getItem(\"accessToken\"); // hoặc sessionStorage nếu bạn lưu ở đó\r\n\r\n    try {\r\n      await axios.put(\r\n        `http://localhost:4000/cart/update`,\r\n        {\r\n          userId,\r\n          productId,\r\n          quantity,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      fetchCart(); // Refresh lại giỏ hàng\r\n    } catch (err) {\r\n      console.error(\"Update quantity failed:\", err);\r\n    }\r\n  };\r\n\r\n  // Remove one product\r\n const removeProduct = async (productId) => {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n\r\n  try {\r\n    await axios.delete(\"http://localhost:4000/cart/remove\", {\r\n      data: {\r\n        userId,\r\n        productId,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    fetchCart(); // Refresh cart\r\n  } catch (err) {\r\n    console.error(\"Remove product failed:\", err);\r\n  }\r\n};\r\n\r\n  // Clear entire cart\r\n  const clearCart = async () => {\r\n    try {\r\n      const promises = orders.map((item) => removeProduct(item.product._id));\r\n      await Promise.all(promises);\r\n      setOrders([]);\r\n    } catch (err) {\r\n      console.error(\"Clear cart failed:\", err);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    orders,\r\n    fetchCart, // thêm nếu bạn muốn gọi lại từ bên ngoài\r\n    handleCart,\r\n    removeProduct,\r\n    clearCart,\r\n    updateQuantity,\r\n  };\r\n\r\n  return (\r\n    <OrderContext.Provider value={value}>{children}</OrderContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrderProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\HocLapTrinh\\\\ProjectBenXe\\\\MiniMarketClient\\\\src\\\\contexts\\\\OrderProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderContext = /*#__PURE__*/createContext();\nconst OrderProvider = ({\n  children\n}) => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  //   const [userId] = useState('6836ba6bb010a67cfc760bb1'); // bạn có thể lấy từ Auth\n  const [userId, setUserId] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token); // sử dụng thư viện jwt-decode\n        setUserId(decoded.userId); // hoặc decoded._id, decoded.sub tùy backend\n      } catch (err) {\n        console.error('Invalid token:', err);\n      }\n    }\n  }, []);\n  // Fetch cart on mount\n  useEffect(() => {\n    fetchCart();\n  }, []);\n  const fetchCart = async () => {\n    try {\n      const res = await axios.get(`http://localhost:4000/cart/${userId}`);\n      setOrders(res.data.items || []);\n    } catch (err) {\n      console.error('Fetch cart failed:', err);\n    }\n  };\n\n  // Add to cart\n  const handleCart = async product => {\n    try {\n      await axios.post(`http://localhost:4000/cart/add`, {\n        userId,\n        productId: product._id,\n        quantity: 1\n      });\n      fetchCart(); // Refresh cart\n    } catch (err) {\n      console.error('Add to cart failed:', err);\n    }\n  };\n\n  // Remove one product\n  const removeProduct = async productId => {\n    try {\n      await axios.delete(`http://localhost:4000/cart/remove`, {\n        data: {\n          userId,\n          productId\n        }\n      });\n      fetchCart(); // Refresh cart\n    } catch (err) {\n      console.error('Remove product failed:', err);\n    }\n  };\n\n  // Clear entire cart\n  const clearCart = async () => {\n    try {\n      const promises = orders.map(item => removeProduct(item.product._id));\n      await Promise.all(promises);\n      setOrders([]);\n    } catch (err) {\n      console.error('Clear cart failed:', err);\n    }\n  };\n  const value = {\n    orders,\n    handleCart,\n    removeProduct,\n    clearCart\n  };\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderProvider, \"+HB/U0HlX2zTmDGlR8kxs/xPKRM=\");\n_c = OrderProvider;\nexport default OrderProvider;\nvar _c;\n$RefreshReg$(_c, \"OrderProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","jwtDecode","jsxDEV","_jsxDEV","OrderContext","OrderProvider","children","_s","orders","setOrders","userId","setUserId","token","localStorage","getItem","decoded","err","console","error","fetchCart","res","get","data","items","handleCart","product","post","productId","_id","quantity","removeProduct","delete","clearCart","promises","map","item","Promise","all","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/HocLapTrinh/ProjectBenXe/MiniMarketClient/src/contexts/OrderProvider.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {jwtDecode} from 'jwt-decode';\r\n\r\nexport const OrderContext = createContext();\r\n\r\nconst OrderProvider = ({ children }) => {\r\n  const [orders, setOrders] = useState([]);\r\n//   const [userId] = useState('6836ba6bb010a67cfc760bb1'); // bạn có thể lấy từ Auth\r\n    const [userId, setUserId] = useState('');\r\n\r\n useEffect(() => {\r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token); // sử dụng thư viện jwt-decode\r\n        setUserId(decoded.userId); // hoặc decoded._id, decoded.sub tùy backend\r\n      } catch (err) {\r\n        console.error('Invalid token:', err);\r\n      }\r\n    }\r\n  }, []);\r\n  // Fetch cart on mount\r\n  useEffect(() => {\r\n    fetchCart();\r\n  }, []);\r\n\r\n  const fetchCart = async () => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:4000/cart/${userId}`);\r\n      setOrders(res.data.items || []);\r\n    } catch (err) {\r\n      console.error('Fetch cart failed:', err);\r\n    }\r\n  };\r\n\r\n  // Add to cart\r\n  const handleCart = async (product) => {\r\n    try {\r\n      await axios.post(`http://localhost:4000/cart/add`, {\r\n        userId,\r\n        productId: product._id,\r\n        quantity: 1,\r\n      });\r\n      fetchCart(); // Refresh cart\r\n    } catch (err) {\r\n      console.error('Add to cart failed:', err);\r\n    }\r\n  };\r\n\r\n  // Remove one product\r\n  const removeProduct = async (productId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:4000/cart/remove`, {\r\n        data: {\r\n          userId,\r\n          productId\r\n        }\r\n      });\r\n      fetchCart(); // Refresh cart\r\n    } catch (err) {\r\n      console.error('Remove product failed:', err);\r\n    }\r\n  };\r\n\r\n  // Clear entire cart\r\n  const clearCart = async () => {\r\n    try {\r\n      const promises = orders.map(item => removeProduct(item.product._id));\r\n      await Promise.all(promises);\r\n      setOrders([]);\r\n    } catch (err) {\r\n      console.error('Clear cart failed:', err);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    orders,\r\n    handleCart,\r\n    removeProduct,\r\n    clearCart,\r\n  };\r\n\r\n  return (\r\n    <OrderContext.Provider value={value}>\r\n      {children}\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrderProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
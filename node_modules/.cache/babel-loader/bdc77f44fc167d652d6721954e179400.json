{"ast":null,"code":"var _s = $RefreshSig$();\nimport { getAuth, signInWithPopup, signOut, GoogleAuthProvider, onAuthStateChanged } from \"firebase/auth\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport initializeAuthentication from \"../config/firebase\";\nimport { jwtDecode } from \"jwt-decode\";\ninitializeAuthentication();\nconst useFirebase = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const auth = getAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Lắng nghe Firebase auth state\n    const unsubscribe = onAuthStateChanged(auth, loggedUser => {\n      if (loggedUser) {\n        setUser(loggedUser);\n        setIsLoading(false);\n      } else {\n        // Nếu không có user Firebase, thử lấy token từ localStorage\n        const token = localStorage.getItem(\"accessToken\");\n        if (token) {\n          try {\n            const decoded = jwtDecode(token);\n            setUser({\n              id: decoded.id,\n              displayName: decoded.name,\n              email: decoded.email,\n              role: decoded.role,\n              picture: decoded.avatar || decoded.picture\n            });\n          } catch (error) {\n            setUser(null);\n          }\n        } else {\n          setUser(null);\n        }\n        setIsLoading(false);\n      }\n    });\n    return () => unsubscribe();\n  }, [auth]);\n  const signInWithGoogle = async () => {\n    setIsLoading(true);\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const {\n        email,\n        displayName,\n        photoURL\n      } = result.user;\n      const googleUser = {\n        email: email,\n        fullname: displayName,\n        avatar: photoURL\n      };\n      const response = await fetch(\"http://localhost:4000/auth/google-login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(googleUser)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || \"Đăng ký Google thất bại\");\n      }\n      const jwtToken = data.data.token; // Token JWT server trả về\n      localStorage.setItem(\"accessToken\", jwtToken);\n      const decoded = jwtDecode(jwtToken);\n      console.log(decoded);\n      setUser({\n        id: decoded.id,\n        displayName: decoded.name,\n        email: decoded.email,\n        role: decoded.role,\n        picture: decoded.avatar\n      });\n      swal({\n        title: \"Xin chúc mừng\",\n        text: \"Bạn đã đăng nhập thành công\",\n        icon: \"success\",\n        buttons: [\"OK\"]\n      }).then(willDelete => {\n        if (willDelete) {\n          navigate(\"/UserInfo\");\n          // Reload sau khi navigate\n          window.location.reload();\n        }\n      });\n    } catch (err) {\n      console.error(err);\n      swal(\"Oops!\", err.message || \"Đã xảy ra lỗi\", \"error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const signOutUser = async () => {\n    setIsLoading(true);\n    try {\n      await signOut(auth);\n      setUser({});\n      swal(\"Logged out\", \"You have been signed out\", \"success\");\n      navigate(\"/signin\");\n    } catch (err) {\n      swal(\"Oops!\", err.message, \"error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    user,\n    isLoading,\n    signInWithGoogle,\n    signOutUser\n  };\n};\n_s(useFirebase, \"o5QfC7aYrUkj9YQ0lGSakMfCddo=\", false, function () {\n  return [useNavigate];\n});\nexport default useFirebase;","map":{"version":3,"names":["getAuth","signInWithPopup","signOut","GoogleAuthProvider","onAuthStateChanged","useState","useEffect","useNavigate","swal","initializeAuthentication","jwtDecode","useFirebase","_s","user","setUser","isLoading","setIsLoading","auth","navigate","unsubscribe","loggedUser","token","localStorage","getItem","decoded","id","displayName","name","email","role","picture","avatar","error","signInWithGoogle","provider","result","photoURL","googleUser","fullname","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","jwtToken","setItem","console","log","title","text","icon","buttons","then","willDelete","window","location","reload","err","signOutUser"],"sources":["D:/HocLapTrinh/ProjectBenXe/MiniMarketClient/src/hooks/useFirebase.js"],"sourcesContent":["import {\r\n  getAuth,\r\n  signInWithPopup,\r\n  signOut,\r\n  GoogleAuthProvider,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport initializeAuthentication from \"../config/firebase\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\ninitializeAuthentication();\r\n\r\nconst useFirebase = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const auth = getAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Lắng nghe Firebase auth state\r\n    const unsubscribe = onAuthStateChanged(auth, (loggedUser) => {\r\n      if (loggedUser) {\r\n        setUser(loggedUser);\r\n        setIsLoading(false);\r\n      } else {\r\n        // Nếu không có user Firebase, thử lấy token từ localStorage\r\n        const token = localStorage.getItem(\"accessToken\");\r\n        if (token) {\r\n          try {\r\n            const decoded = jwtDecode(token);\r\n            setUser({\r\n              id: decoded.id,\r\n              displayName: decoded.name,\r\n              email: decoded.email,\r\n              role: decoded.role,\r\n              picture: decoded.avatar || decoded.picture,\r\n            });\r\n          } catch (error) {\r\n            setUser(null);\r\n          }\r\n        } else {\r\n          setUser(null);\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [auth]);\r\n\r\n  const signInWithGoogle = async () => {\r\n    setIsLoading(true);\r\n    const provider = new GoogleAuthProvider();\r\n\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const { email, displayName, photoURL } = result.user;\r\n\r\n      const googleUser = {\r\n        email: email,\r\n        fullname: displayName,\r\n        avatar: photoURL,\r\n      };\r\n      const response = await fetch(\"http://localhost:4000/auth/google-login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(googleUser),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"Đăng ký Google thất bại\");\r\n      }\r\n\r\n      const jwtToken = data.data.token; // Token JWT server trả về\r\n      localStorage.setItem(\"accessToken\", jwtToken);\r\n      const decoded = jwtDecode(jwtToken);\r\n      console.log(decoded);\r\n\r\n      setUser({\r\n        id: decoded.id,\r\n        displayName: decoded.name,\r\n        email: decoded.email,\r\n        role: decoded.role,\r\n        picture: decoded.avatar,\r\n      });\r\n      swal({\r\n        title: \"Xin chúc mừng\",\r\n        text: \"Bạn đã đăng nhập thành công\",\r\n        icon: \"success\",\r\n        buttons: [\"OK\"],\r\n      }).then((willDelete) => {\r\n        if (willDelete) {\r\n          navigate(\"/UserInfo\");\r\n          // Reload sau khi navigate\r\n          window.location.reload();\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      swal(\"Oops!\", err.message || \"Đã xảy ra lỗi\", \"error\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const signOutUser = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      await signOut(auth);\r\n      setUser({});\r\n      swal(\"Logged out\", \"You have been signed out\", \"success\");\r\n      navigate(\"/signin\");\r\n    } catch (err) {\r\n      swal(\"Oops!\", err.message, \"error\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    user,\r\n    isLoading,\r\n    signInWithGoogle,\r\n    signOutUser,\r\n  };\r\n};\r\n\r\nexport default useFirebase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}